###########
# BUILDER #
###########

FROM python:3.12-slim AS builder

WORKDIR /usr/src/app
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

RUN apt-get update && apt-get install -y --no-install-recommends gcc && rm -rf /var/lib/apt/lists/*

# Install dependencies
COPY requirements.txt .
RUN pip install --upgrade pip
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

# Copy full project
COPY . /usr/src/app/

#########
# FINAL #
#########

FROM python:3.12-slim

ENV HOME=/home/app
ENV APP_HOME=/home/app/web

# Create user and directories
RUN mkdir -p $APP_HOME
RUN addgroup --system app && adduser --system --ingroup app app
RUN mkdir $APP_HOME/static
WORKDIR $APP_HOME

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends netcat-openbsd && rm -rf /var/lib/apt/lists/*

# Copy wheels from builder and install
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip && pip install --no-cache-dir /wheels/*

# Copy wait_for_it.sh
COPY wait_for_it.sh $APP_HOME/wait_for_it.sh

# Copy full project
COPY . $APP_HOME

# Set ownership
RUN chown -R app:app $APP_HOME
RUN sed -i 's/\r$//g' $APP_HOME/wait_for_it.sh
RUN chmod +x $APP_HOME/wait_for_it.sh

# Use non-root user
USER app

# Entrypoint
ENTRYPOINT ["/home/app/web/wait_for_it.sh"]
